{
  "swagger": "2.0",
  "info": {
    "description": "API is used to create load for other APIs",
    "version": "1",
    "title": "Import Test",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost",
  "basePath": "/Import/yay/v1",
  "schemes": [
    "http"
  ],
  "paths": {
    "/configure/{test}/bla": {
      "put": {
        "summary": "Configure the tests that will be executed",
        "operationId": "addTests",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "testCollection",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestCollection"
            },
            "x-exportParamName": "TestCollection"
          }
        ],
        "responses": {
          "200": {
            "description": "Tests Configured"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/test/{bla}?filter={filter}": {
      "get": {
        "summary": "Get test run status",
        "operationId": "getTestStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the status of the test run",
            "schema": {
              "$ref": "#/definitions/TestStatus"
            }
          }
        }
      },
      "post": {
        "summary": "Start a new test run",
        "operationId": "startTestRun",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "testParameters",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestParameters"
            },
            "x-exportParamName": "TestParameters"
          }
        ],
        "responses": {
          "201": {
            "description": "Test run has started"
          },
          "409": {
            "description": "A test is already being executed on this agent"
          }
        }
      },
      "put": {
        "summary": "Change the parameters of a test that is being executed",
        "operationId": "updateTestRun",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "testParameters",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TestParameters"
            },
            "x-exportParamName": "TestParameters"
          }
        ],
        "responses": {
          "202": {
            "description": "Change accepted"
          }
        }
      },
      "delete": {
        "summary": "Stop a test run",
        "operationId": "stopTestRun",
        "parameters": [
          {
            "name": "testName",
            "in": "path",
            "description": "Name of the test run that must be stopped",
            "required": true,
            "type": "string",
            "x-exportParamName": "TestName"
          }
        ],
        "responses": {
          "205": {
            "description": "Test run stopped"
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Synthetic transaction",
        "operationId": "isAlive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The service is alive"
          }
        }
      }
    }
  },
  "definitions": {
    "TestCollection": {
      "type": "object",
      "required": [
        "name",
        "tests"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "tests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Test"
          }
        }
      },
      "example": {
        "tests": [
          {
            "headers": [
              {
                "name": "name",
                "value": "value"
              },
              {
                "name": "name",
                "value": "value"
              }
            ],
            "responseBody": "responseBody",
            "method": "method",
            "name": "name",
            "body": "body",
            "url": "url",
            "responseCode": 0
          },
          {
            "headers": [
              {
                "name": "name",
                "value": "value"
              },
              {
                "name": "name",
                "value": "value"
              }
            ],
            "responseBody": "responseBody",
            "method": "method",
            "name": "name",
            "body": "body",
            "url": "url",
            "responseCode": 0
          }
        ],
        "name": "name"
      }
    },
    "Test": {
      "type": "object",
      "required": [
        "method",
        "name",
        "responseCode",
        "url"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Header"
          }
        },
        "responseCode": {
          "type": "integer",
          "description": "The expected HTTP Status code that is returned"
        },
        "responseBody": {
          "type": "string",
          "description": "The expected body. This probably won't work so well"
        }
      },
      "example": {
        "headers": [
          {
            "name": "name",
            "value": "value"
          },
          {
            "name": "name",
            "value": "value"
          }
        ],
        "responseBody": "responseBody",
        "method": "method",
        "name": "name",
        "body": "body",
        "url": "url",
        "responseCode": 0
      }
    },
    "Header": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "example": {
        "name": "name",
        "value": "value"
      }
    },
    "TestStatus": {
      "type": "object",
      "properties": {
        "testCollectionName": {
          "type": "string",
          "description": "Name of the test collection that is being executed"
        },
        "requestsExecuted": {
          "type": "integer",
          "description": "The total requests sent to the remote API"
        },
        "transactionsPerSecond": {
          "type": "integer"
        },
        "averageExecutionTime": {
          "type": "integer",
          "description": "Execution time in seconds"
        },
        "cpu": {
          "type": "integer",
          "description": "CPU usage on the host that the agent is running on"
        },
        "simulatedUsers": {
          "type": "integer",
          "description": "The number of users being simulated"
        }
      },
      "example": {
        "executionTime": 1,
        "simulatedUsers": 5,
        "testCollectionName": "testCollectionName",
        "requestsExecuted": 0,
        "cpu": 5,
        "transactionsPerSecond": 6
      }
    },
    "TestParameters": {
      "type": "object",
      "required": [
        "simulatedUsers",
        "testCollectionName"
      ],
      "properties": {
        "simulatedUsers": {
          "type": "integer",
          "description": "The number of users to simulate"
        },
        "testCollectionName": {
          "type": "string",
          "description": "Name of the test collection to start"
        }
      },
      "example": {
        "simulatedUsers": 0,
        "testCollectionName": "testCollectionName"
      }
    }
  }
}